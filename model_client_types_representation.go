/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keycloak_admin_client

import (
	"encoding/json"
)

// checks if the ClientTypesRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientTypesRepresentation{}

// ClientTypesRepresentation struct for ClientTypesRepresentation
type ClientTypesRepresentation struct {
	ClientTypes       []ClientTypeRepresentation `json:"client-types,omitempty"`
	GlobalClientTypes []ClientTypeRepresentation `json:"global-client-types,omitempty"`
}

// NewClientTypesRepresentation instantiates a new ClientTypesRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientTypesRepresentation() *ClientTypesRepresentation {
	this := ClientTypesRepresentation{}
	return &this
}

// NewClientTypesRepresentationWithDefaults instantiates a new ClientTypesRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientTypesRepresentationWithDefaults() *ClientTypesRepresentation {
	this := ClientTypesRepresentation{}
	return &this
}

// GetClientTypes returns the ClientTypes field value if set, zero value otherwise.
func (o *ClientTypesRepresentation) GetClientTypes() []ClientTypeRepresentation {
	if o == nil || IsNil(o.ClientTypes) {
		var ret []ClientTypeRepresentation
		return ret
	}
	return o.ClientTypes
}

// GetClientTypesOk returns a tuple with the ClientTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientTypesRepresentation) GetClientTypesOk() ([]ClientTypeRepresentation, bool) {
	if o == nil || IsNil(o.ClientTypes) {
		return nil, false
	}
	return o.ClientTypes, true
}

// HasClientTypes returns a boolean if a field has been set.
func (o *ClientTypesRepresentation) HasClientTypes() bool {
	if o != nil && !IsNil(o.ClientTypes) {
		return true
	}

	return false
}

// SetClientTypes gets a reference to the given []ClientTypeRepresentation and assigns it to the ClientTypes field.
func (o *ClientTypesRepresentation) SetClientTypes(v []ClientTypeRepresentation) {
	o.ClientTypes = v
}

// GetGlobalClientTypes returns the GlobalClientTypes field value if set, zero value otherwise.
func (o *ClientTypesRepresentation) GetGlobalClientTypes() []ClientTypeRepresentation {
	if o == nil || IsNil(o.GlobalClientTypes) {
		var ret []ClientTypeRepresentation
		return ret
	}
	return o.GlobalClientTypes
}

// GetGlobalClientTypesOk returns a tuple with the GlobalClientTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientTypesRepresentation) GetGlobalClientTypesOk() ([]ClientTypeRepresentation, bool) {
	if o == nil || IsNil(o.GlobalClientTypes) {
		return nil, false
	}
	return o.GlobalClientTypes, true
}

// HasGlobalClientTypes returns a boolean if a field has been set.
func (o *ClientTypesRepresentation) HasGlobalClientTypes() bool {
	if o != nil && !IsNil(o.GlobalClientTypes) {
		return true
	}

	return false
}

// SetGlobalClientTypes gets a reference to the given []ClientTypeRepresentation and assigns it to the GlobalClientTypes field.
func (o *ClientTypesRepresentation) SetGlobalClientTypes(v []ClientTypeRepresentation) {
	o.GlobalClientTypes = v
}

func (o ClientTypesRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientTypesRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientTypes) {
		toSerialize["client-types"] = o.ClientTypes
	}
	if !IsNil(o.GlobalClientTypes) {
		toSerialize["global-client-types"] = o.GlobalClientTypes
	}
	return toSerialize, nil
}

type NullableClientTypesRepresentation struct {
	value *ClientTypesRepresentation
	isSet bool
}

func (v NullableClientTypesRepresentation) Get() *ClientTypesRepresentation {
	return v.value
}

func (v *NullableClientTypesRepresentation) Set(val *ClientTypesRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableClientTypesRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableClientTypesRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientTypesRepresentation(val *ClientTypesRepresentation) *NullableClientTypesRepresentation {
	return &NullableClientTypesRepresentation{value: val, isSet: true}
}

func (v NullableClientTypesRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientTypesRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
