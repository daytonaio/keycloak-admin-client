/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keycloak_admin_client

import (
	"encoding/json"
)

// checks if the OrganizationDomainRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationDomainRepresentation{}

// OrganizationDomainRepresentation struct for OrganizationDomainRepresentation
type OrganizationDomainRepresentation struct {
	Name     *string `json:"name,omitempty"`
	Verified *bool   `json:"verified,omitempty"`
}

// NewOrganizationDomainRepresentation instantiates a new OrganizationDomainRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationDomainRepresentation() *OrganizationDomainRepresentation {
	this := OrganizationDomainRepresentation{}
	return &this
}

// NewOrganizationDomainRepresentationWithDefaults instantiates a new OrganizationDomainRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationDomainRepresentationWithDefaults() *OrganizationDomainRepresentation {
	this := OrganizationDomainRepresentation{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationDomainRepresentation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationDomainRepresentation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationDomainRepresentation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationDomainRepresentation) SetName(v string) {
	o.Name = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *OrganizationDomainRepresentation) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationDomainRepresentation) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *OrganizationDomainRepresentation) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *OrganizationDomainRepresentation) SetVerified(v bool) {
	o.Verified = &v
}

func (o OrganizationDomainRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationDomainRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableOrganizationDomainRepresentation struct {
	value *OrganizationDomainRepresentation
	isSet bool
}

func (v NullableOrganizationDomainRepresentation) Get() *OrganizationDomainRepresentation {
	return v.value
}

func (v *NullableOrganizationDomainRepresentation) Set(val *OrganizationDomainRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationDomainRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationDomainRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationDomainRepresentation(val *OrganizationDomainRepresentation) *NullableOrganizationDomainRepresentation {
	return &NullableOrganizationDomainRepresentation{value: val, isSet: true}
}

func (v NullableOrganizationDomainRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationDomainRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
