/*
Keycloak Admin REST API

This is a REST API reference for the Keycloak Admin REST API.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keycloak_admin_client

import (
	"encoding/json"
)

// checks if the OrganizationRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationRepresentation{}

// OrganizationRepresentation struct for OrganizationRepresentation
type OrganizationRepresentation struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Description *string `json:"description,omitempty"`
	RedirectUrl *string `json:"redirectUrl,omitempty"`
	Attributes *map[string][]string `json:"attributes,omitempty"`
	Domains []OrganizationDomainRepresentation `json:"domains,omitempty"`
	Members []MemberRepresentation `json:"members,omitempty"`
	IdentityProviders []IdentityProviderRepresentation `json:"identityProviders,omitempty"`
}

// NewOrganizationRepresentation instantiates a new OrganizationRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationRepresentation() *OrganizationRepresentation {
	this := OrganizationRepresentation{}
	return &this
}

// NewOrganizationRepresentationWithDefaults instantiates a new OrganizationRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationRepresentationWithDefaults() *OrganizationRepresentation {
	this := OrganizationRepresentation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationRepresentation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationRepresentation) SetName(v string) {
	o.Name = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *OrganizationRepresentation) SetAlias(v string) {
	o.Alias = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OrganizationRepresentation) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationRepresentation) SetDescription(v string) {
	o.Description = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *OrganizationRepresentation) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetAttributes() map[string][]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string][]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetAttributesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string][]string and assigns it to the Attributes field.
func (o *OrganizationRepresentation) SetAttributes(v map[string][]string) {
	o.Attributes = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetDomains() []OrganizationDomainRepresentation {
	if o == nil || IsNil(o.Domains) {
		var ret []OrganizationDomainRepresentation
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetDomainsOk() ([]OrganizationDomainRepresentation, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []OrganizationDomainRepresentation and assigns it to the Domains field.
func (o *OrganizationRepresentation) SetDomains(v []OrganizationDomainRepresentation) {
	o.Domains = v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetMembers() []MemberRepresentation {
	if o == nil || IsNil(o.Members) {
		var ret []MemberRepresentation
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetMembersOk() ([]MemberRepresentation, bool) {
	if o == nil || IsNil(o.Members) {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasMembers() bool {
	if o != nil && !IsNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []MemberRepresentation and assigns it to the Members field.
func (o *OrganizationRepresentation) SetMembers(v []MemberRepresentation) {
	o.Members = v
}

// GetIdentityProviders returns the IdentityProviders field value if set, zero value otherwise.
func (o *OrganizationRepresentation) GetIdentityProviders() []IdentityProviderRepresentation {
	if o == nil || IsNil(o.IdentityProviders) {
		var ret []IdentityProviderRepresentation
		return ret
	}
	return o.IdentityProviders
}

// GetIdentityProvidersOk returns a tuple with the IdentityProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRepresentation) GetIdentityProvidersOk() ([]IdentityProviderRepresentation, bool) {
	if o == nil || IsNil(o.IdentityProviders) {
		return nil, false
	}
	return o.IdentityProviders, true
}

// HasIdentityProviders returns a boolean if a field has been set.
func (o *OrganizationRepresentation) HasIdentityProviders() bool {
	if o != nil && !IsNil(o.IdentityProviders) {
		return true
	}

	return false
}

// SetIdentityProviders gets a reference to the given []IdentityProviderRepresentation and assigns it to the IdentityProviders field.
func (o *OrganizationRepresentation) SetIdentityProviders(v []IdentityProviderRepresentation) {
	o.IdentityProviders = v
}

func (o OrganizationRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	if !IsNil(o.IdentityProviders) {
		toSerialize["identityProviders"] = o.IdentityProviders
	}
	return toSerialize, nil
}

type NullableOrganizationRepresentation struct {
	value *OrganizationRepresentation
	isSet bool
}

func (v NullableOrganizationRepresentation) Get() *OrganizationRepresentation {
	return v.value
}

func (v *NullableOrganizationRepresentation) Set(val *OrganizationRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationRepresentation(val *OrganizationRepresentation) *NullableOrganizationRepresentation {
	return &NullableOrganizationRepresentation{value: val, isSet: true}
}

func (v NullableOrganizationRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


